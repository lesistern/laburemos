version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: laburemos_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: laburemos_db
      POSTGRES_USER: laburemos_user
      POSTGRES_PASSWORD: laburemos_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - laburemos_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: laburemos_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laburemos_network

  # Main API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laburemos_api_gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    networks:
      - laburemos_network

  # Auth Microservice
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.microservice
      args:
        SERVICE_NAME: auth
    container_name: laburemos_auth_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - laburemos_network

  # User Microservice
  user-service:
    build:
      context: .
      dockerfile: Dockerfile.microservice
      args:
        SERVICE_NAME: user
    container_name: laburemos_user_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - laburemos_network

  # Project Microservice
  project-service:
    build:
      context: .
      dockerfile: Dockerfile.microservice
      args:
        SERVICE_NAME: project
    container_name: laburemos_project_service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - laburemos_network

  # Payment Microservice
  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.microservice
      args:
        SERVICE_NAME: payment
    container_name: laburemos_payment_service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - laburemos_network

  # Notification Microservice
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.microservice
      args:
        SERVICE_NAME: notification
    container_name: laburemos_notification_service
    restart: unless-stopped
    ports:
      - "3006:3006"
      - "3001:3001"  # WebSocket port
    environment:
      - NODE_ENV=development
      - PORT=3006
      - WS_PORT=3001
      - DATABASE_URL=postgresql://laburemos_user:laburemos_password@postgres:5432/laburemos_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - laburemos_network

  # PgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: laburemos_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@laburemos.com.ar
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - laburemos_network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: laburemos_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - laburemos_network

volumes:
  postgres_data:
  redis_data:

networks:
  laburemos_network:
    driver: bridge